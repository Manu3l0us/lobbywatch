<?php

/**
 * Implements hook_menu().
 */
function lobbywatch_menu() {
//   dpm('passed');
  $items = array();

  $items['autocomplete/parlamentarier'] = array(
     'title' => 'Autocomplete (simple)',
//     'page callback' => 'drupal_get_form',
//     'page arguments' => array('ajax_example_simple_autocomplete'),
//     'access arguments' => array('access user profiles'),
//     'file' => 'ajax_example_autocomplete.inc',
//     'weight' => 10,
//     'path' => 'parlamentarier/autocomplete',
    'page callback' => 'lobbywatch_parlamentarier_autocomplete',
//     'callback' => 'lobbywatch_parlamentarier_autocomplete',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );

  $items['parlamentarier'] = array(
    'title' => 'Parlamentarier',
    'page callback' => 'lobbywatch_parlamentarier_list',
    'access arguments' => array('access lobbywatch general content'),
    'type' => MENU_CALLBACK,
    );

  $items['parlamentarier/%'] = array(
    'title' => 'Parlamentarier',
    'title callback' => 'lobbywatch_page_title',
    'title arguments' => array('Parlamentarier: ', '', 'parlamentarier', 1),
    // TODO set 'title callback' for adding name
    'page callback' => 'lobbywatch_parlamentarier_id',
    'page arguments' => array(1),
    'access arguments' => array('access lobbywatch general content'),
    'type' => MENU_CALLBACK,
    );

  $items['parlamentarier/%/%'] = array(
    'title' => 'Parlamentarier',
    'title callback' => 'lobbywatch_page_title',
    'title arguments' => array('Parlamentarier: ', '', 'parlamentarier', 1),
    'page callback' => 'lobbywatch_parlamentarier_id',
    'page arguments' => array(1, 2),
    'access arguments' => array('access lobbywatch general content'),
    'type' => MENU_CALLBACK,
    );

  $items['organisation'] = array(
    'title' => 'Organisationen',
    'page callback' => 'lobbywatch_organisation_list',
    'access arguments' => array('access lobbywatch general content'),
    'type' => MENU_CALLBACK,
    );

  $items['organisation/%'] = array(
    'title' => 'Organisation',
    'title callback' => 'lobbywatch_page_title',
    'title arguments' => array('Organisation: ', '', 'organisation', 1),
    'page callback' => 'lobbywatch_organisation_id',
    'page arguments' => array(1),
    'access arguments' => array('access lobbywatch general content'),
    'type' => MENU_CALLBACK,
    );

  $items['partei'] = array(
    'title' => 'Parteien',
    'page callback' => 'lobbywatch_partei_list',
    'access arguments' => array('access lobbywatch general content'),
    'type' => MENU_CALLBACK,
    );

  $items['partei/%'] = array(
    'title' => 'Partei',
    'title callback' => 'lobbywatch_page_title',
    'title arguments' => array('Partei: ', '', 'partei', 1),
    'page callback' => 'lobbywatch_partei_id',
    'page arguments' => array(1),
    'access arguments' => array('access lobbywatch general content'),
    'type' => MENU_CALLBACK,
    );

  $items['kommission'] = array(
    'title' => 'Kommissionen',
    'page callback' => 'lobbywatch_kommission_list',
    'access arguments' => array('access lobbywatch general content'),
    'type' => MENU_CALLBACK,
    );

  $items['kommission/%'] = array(
    'title' => 'Kommission',
    'title callback' => 'lobbywatch_page_title',
    'title arguments' => array('Kommission: ', '', 'kommission', 1),
    'page callback' => 'lobbywatch_kommission_id',
    'page arguments' => array(1),
    'access arguments' => array('access lobbywatch general content'),
    'type' => MENU_CALLBACK,
    );

  $items['branche'] = array(
    'title' => 'Branchen',
    'page callback' => 'lobbywatch_branche_list',
    'access arguments' => array('access lobbywatch general content'),
    'type' => MENU_CALLBACK,
    );

  $items['branche/%'] = array(
    'title' => 'Branche',
    'title callback' => 'lobbywatch_page_title',
    'title arguments' => array('Branche: ', '', 'branche', 1),
    'page callback' => 'lobbywatch_branche_id',
    'page arguments' => array(1),
    'access arguments' => array('access lobbywatch general content'),
    'type' => MENU_CALLBACK,
    );

  $items['interessengruppe'] = array(
    'title' => 'Interessengruppen',
    'page callback' => 'lobbywatch_interessengruppe_list',
    'access arguments' => array('access lobbywatch general content'),
    'type' => MENU_CALLBACK,
    );

  $items['interessengruppe/%'] = array(
    'title' => 'Interessengruppe',
    'title callback' => 'lobbywatch_page_title',
    'title arguments' => array('Interessengruppe: ', '', 'interessengruppe', 1),
    'page callback' => 'lobbywatch_interessengruppe_id',
    'page arguments' => array(1),
    'access arguments' => array('access lobbywatch general content'),
    'type' => MENU_CALLBACK,
    );

  $items['zutrittsberechtigter'] = array(
    'title' => 'Zutrittsberechtigte',
    'page callback' => 'lobbywatch_zutrittsberechtigung_list',
    'access arguments' => array('access lobbywatch general content'),
    'type' => MENU_CALLBACK,
    );

  $items['zutrittsberechtigter/%'] = array(
    'title' => 'Zutrittsberechtigter',
    'title callback' => 'lobbywatch_page_title',
    'title arguments' => array('ZutrittsberechtigteR: ', '', 'zutrittsberechtigung', 1),
    'page callback' => 'lobbywatch_zutrittsberechtigung_id',
    'page arguments' => array(1),
    'access arguments' => array('access lobbywatch general content'),
    'type' => MENU_CALLBACK,
    );

    return $items;
}

/**
* Implements hook_permission().
*/
function lobbywatch_permission() {
  return array(
    'access lobbywatch general content' => array(
      'title' => t('Access general content of the lobbywatch module'),
    )
  );
}

/**
 * Blocks of ibex utils.
 *
 * Implements hook_block_info().
 */
function lobbywatch_block_info() {
  $blocks['search'] = array(
    'info' => t('Search'),
    'cache' => DRUPAL_NO_CACHE,
    'weight' => 40,
    );

    return $blocks;
}

/**
 * Implements hook_block_view().
 */
function lobbywatch_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'search':
      $block['subject'] = t('Search');
      // Form in a block: http://zerotodrupal.com/content/creating-form-block-drupal-7
      $block['content'] = drupal_get_form('lobbywatch_form');
      break;
  }
  return $block;
}

/**
 * Define the form to be returned.
 *
 * Note that drupal passes in two parameters,
 * $form - which holds all of the elements of the form
 * $form_state - a special array of settings & values needed by Drupal
 */
function lobbywatch_form($form, &$form_state) {
  // Now the fun begins. For this simple example,
  // we will only provide two form elements.
  // 1. an input for the friend's email address
  // 2. a submit button
  // You can add as much or as little to this form as
  // needed. See the forms api for all possible elements.

  $form['search_field'] = array(
    // #type tells drupal what kind of element to build
    '#type' => 'textfield',
    // we want this field to be required
    '#required' => TRUE,
    // The "label" for this field
    '#title' => t("Parlamentariername"),
    // Optional description
    '#description' => t('Parlamentariername zur Anzeige'),
    '#autocomplete_path' => 'autocomplete/parlamentarier',
    );

    $form['submit'] = array(
      '#type' => 'submit',
      // #value is the text to display inside the button
      '#value' => t('Show'),
      );

      return $form;
}

/*
 * Define a validation function that drupal will
 * automatically call when the submit button is pressed.
 *
 * For this example, I will use the valid_email_address()
 * function to verify that the email address looks
 * proper. If it's not, we'll use form_set_error()
 * function to tell drupal we didn't pass validation.
 */
function lobbywatch_form_validate($form, &$form_state) {
  // Drupal stows away all of the form elements into
  // $form_state['values']. We find our 'friends_email'
  // element and assign it to a variable for easy
  // reference.
  $name = $form_state['values']['search_field'];

//   // If it's not a valid email, set an error.
//   if(valid_email_address($email) == 0) {
//     // form_set_error() tells drupal that it should not proceed.
//     // The first parameter is the form element that didn't pass
//     // validation. The second is the message to tell the user.
//     form_set_error('friends_email', t('Not a valid email address'));
//   }
}

/*
 * Define a submit funciton that drupal will
 * automatically call when submit is pressed (and all validators pass)
 */
function lobbywatch_form_submit($form, &$form_state) {
  // Get the email value again
  $item = $form_state['values']['search_field'];
  // Now we call drupal_mail() to send a message to this person.
  // Note that this basically tells drupal to call tellafriend_mail().
//   $message = drupal_mail('tellafriend', 'notify', $email, language_default());
  // Check the message results and let the user know if php was able to sent the email.

  $result = preg_match('/\[([0-9]+)\]$/', $item, $matches);
  if ($result > 0) {
    // If $result is nonzero, we found a match and can use it as the index into $matches.
    $id = $matches[$result];
    // Verify that it's a valid nid.
    drupal_goto("parlamentarier/$id");
//     $node = node_load($nid);
//     if (empty($node)) {
//       form_error($form['node'], t('Sorry, no node with nid %nid can be found', array('%nid' => $nid)));
//       return;
//     }
  }
//   if(!empty($message['result'])) {
//     // TODO drupal goto
//     drupal_set_message(t('You just told your friend about us!'));
//   } else {
//     drupal_set_message(t('There was a problem sending your message', 'error'));
//   }
}

// Ref https://api.drupal.org/api/examples/ajax_example!ajax_example_autocomplete.inc/7
function lobbywatch_parlamentarier_autocomplete($str = '') {

//   return lobbywatch_parlamentarier_list();
  // Use the database we set up earlier
  // Ref: https://drupal.org/node/18429
  db_set_active('lobbywatch');

  try {
    $items = array();
    $sql = "SELECT parlamentarier.anzeige_name, parlamentarier.id FROM v_parlamentarier parlamentarier WHERE parlamentarier.im_rat_bis IS NULL AND parlamentarier.anzeige_name LIKE :str";
    $result = db_query($sql, array(':str' => "%$str%"));

  //   dpm($result, 'result');

    while($record = $result->fetchAssoc()) {
      $item = check_plain($record['anzeige_name']) . " [" . check_plain($record['id']) . "]";
      $items[$item] = $item;
    }
  } finally {
    // Go back to the default database,
    // otherwise Drupal will not be able to access it's own data later on.
    db_set_active();
  }

//   dpm($items, 'items');

  drupal_json_output($items);

  // TODO exit required? it's not in examples
//    exit();
}

/**
 * TODO
 */
function lobbywatch_parlamentarier_list() {
  $markup = t('<p>Liste der Parlamentarier</p>');
  $markup .= '<table border="0"  class="tablesorter table-medium header-sticky-enabled">
  <thead>
  <tr><th>Name</th><th>Partei</th><th>Rat</th><th>Kanton</th></tr>
  </thead>
  <tbody>';

  // Use the database we set up earlier
  // Ref: https://drupal.org/node/18429
  db_set_active('lobbywatch');

  try {
    $result = db_query("SELECT parlamentarier.*
    FROM v_parlamentarier parlamentarier
    WHERE parlamentarier.im_rat_bis IS NULL
    ORDER BY parlamentarier.anzeige_name");

    while ($record = $result->fetchAssoc()) {
      $markup .= '<tr><td><a href="/parlamentarier/' . check_plain($record['id']) . '/' . lobbywatch_clean_for_url($record['anzeige_name']) . '">' . check_plain($record['anzeige_name']) . '</a></td><td>' . check_plain($record['partei']) . '</td><td>' . check_plain($record['ratstyp']) . '</td><td>' . check_plain($record['kanton']) . '</td></tr>';
    }

    $markup .= '</tbody></table>';
  } finally {
    // Go back to the default database,
    // otherwise Drupal will not be able to access it's own data later on.
    db_set_active();
  }

  $build = array();
  $build['terms'] = array(
    '#weight' => -5,
    '#prefix' => '<div class="lobbywatch">',
    '#markup' => $markup,
    '#suffix' => '</div>',
    );

  return $build;

}


function lobbywatch_page_title($prefix, $suffix, $table, $id) {
  return $prefix . lobbywatch_fetch_anzeige_name($table, $id) . $suffix;
}


function lobbywatch_fetch_anzeige_name($table, $id) {
  $url_name = '';

  // Use the database we set up earlier
  // Ref: https://drupal.org/node/18429
  db_set_active('lobbywatch');

  try {
    $sql = "SELECT * FROM v_$table WHERE id=:id";
    $result = db_query($sql, array(':id' => check_plain($id)));

    if ($result) {
      $record = $result->fetchAssoc();
      $url_name = check_plain($record['anzeige_name']);
    }
  } finally {
    // Go back to the default database,
    // otherwise Drupal will not be able to access it's own data later on.
    db_set_active();
  }
  return $url_name;
}


function lobbywatch_anzeige_name_for_url($table, $id) {
  return lobbywatch_clean_for_url(lobbywatch_fetch_anzeige_name($table, $id));
}

function lobbywatch_clean_for_url($name){
  $url_name = preg_replace('/[.,]/i', '', $name);
  $url_name = preg_replace('/[\/]/i', '-', $url_name);
  return check_plain($url_name);
}

// Ref: http://stackoverflow.com/questions/1416697/converting-timestamp-to-time-ago-in-php-e-g-1-day-ago-2-days-ago
function time_elapsed_string($datetime, $full = false) {
    $now = new DateTime;
    $ago = new DateTime($datetime);
    $diff = $now->diff($ago);

    $diff->w = floor($diff->d / 7);
    $diff->d -= $diff->w * 7;

    $string = array(
        'y' => 'year',
        'm' => 'month',
        'w' => 'week',
        'd' => 'day',
        'h' => 'hour',
        'i' => 'minute',
        's' => 'second',
    );
    foreach ($string as $k => &$v) {
        if ($diff->$k) {
            $v = $diff->$k . ' ' . $v . ($diff->$k > 1 ? 's' : '');
        } else {
            unset($string[$k]);
        }
    }

    if (!$full) $string = array_slice($string, 0, 1);
    return $string ? implode(', ', $string) . ' ago' : 'just now';
}

function years($date_str) {
//   dpm($date_str);
  $today = new DateTime();
  $date = new DateTime($date_str);
//   dpm($date);
  $interval  = $today->diff($date);
//   dpm($interval);
  return format_plural($interval->format('%y'), '1 Jahr', '@count Jahre');
}

function years_months($date_str) {
//   dpm($date_str);
  $today = new DateTime();
  $date = new DateTime($date_str);
//   dpm($date);
  $interval  = $today->diff($date);
//   dpm($interval);
  $years = $interval->format('%y');
  $months = $interval->format('%m');
  return ($years > 0 ? format_plural($years, '1 Jahr', '@count Jahren') : '') . ($months > 0 ? ' ' . format_plural($months, '1 Monat', '@count Monaten') : '');
}


function lobbywatch_gaesteMitMandaten($parlamentarier_id) {
  $sql = "SELECT zutrittsberechtigung.id, zutrittsberechtigung.anzeige_name as zutrittsberechtigung_name, zutrittsberechtigung.funktion,
GROUP_CONCAT(DISTINCT
    CONCAT('<li>', IF(mandat.bis IS NOT NULL, '<s>', ''), '<a href=\"/organisation/', organisation.id, '\">', organisation.anzeige_name, '</a>',
    IF(organisation.rechtsform IS NULL OR TRIM(organisation.rechtsform) = '', '', CONCAT(', ', organisation.rechtsform)), IF(organisation.ort IS NULL OR TRIM(organisation.ort) = '', '', CONCAT(', ', organisation.ort)), ', ', CONCAT(UCASE(LEFT(mandat.art, 1)), SUBSTRING(mandat.art, 2)),
    IF(mandat.funktion_im_gremium IS NULL OR TRIM(mandat.funktion_im_gremium) = '', '', CONCAT(', ',CONCAT(UCASE(LEFT(mandat.funktion_im_gremium, 1)), SUBSTRING(mandat.funktion_im_gremium, 2)))),
    IF(mandat.beschreibung IS NULL OR TRIM(mandat.beschreibung) = '', '', CONCAT('<small class=\"desc\">, &quot;', mandat.beschreibung, '&quot;</small>')))
    ORDER BY organisation.anzeige_name
    SEPARATOR ' '
) mandate
FROM v_zutrittsberechtigung zutrittsberechtigung
LEFT JOIN v_mandat mandat
  ON mandat.zutrittsberechtigung_id = zutrittsberechtigung.id -- AND mandat.bis IS NULL
LEFT JOIN v_organisation organisation
  ON mandat.organisation_id = organisation.id
WHERE
  zutrittsberechtigung.bis IS NULL
  AND zutrittsberechtigung.parlamentarier_id=:id
GROUP BY zutrittsberechtigung.id;";

  $gaeste = array();
//   $sth = $con->prepare($sql);
//   $sth->execute(array(':id' => $parlamentarier_id));
  $result = db_query($sql, array(':id' => $parlamentarier_id));
//  $record = $result->fetchAssoc();

  //$gaeste = $result->fetchAssoc();
  $gaeste = $result->fetchAllAssoc('id', PDO::FETCH_ASSOC);
  //dpm($gaeste, '$gaeste');

  if (!$gaeste) {
    return '<p>keine</p>';
//      throw new Exception('Parlamentarier ID not found');
  }

  $res = '';
  foreach($gaeste as $gast) {
    $res .= '<h5>' . $gast['zutrittsberechtigung_name'] . '</h5>';
    //$res .= mandateList($con, $gast['id']);
    $res .= "<ul>\n" . $gast['mandate'] . "\n</ul>";
  }

  return $res;
}

function lobbywatch_brancheMitInteressengruppen($kommission_id) {
  $sql = "SELECT branche.id, branche.anzeige_name as branche_name,
GROUP_CONCAT(DISTINCT
    CONCAT('<li><a href=\"/interessengruppe/', interessengruppe.id, '\">', interessengruppe.anzeige_name, '</a>',
    IF(interessengruppe.beschreibung IS NULL OR TRIM(interessengruppe.beschreibung) = '', '', CONCAT('<small class=\"desc\">, &quot;', interessengruppe.beschreibung, '&quot;</small>')))
    ORDER BY interessengruppe.anzeige_name
    SEPARATOR ' '
) interessengruppen
FROM `v_branche` branche
LEFT JOIN `v_interessengruppe` interessengruppe
  ON interessengruppe.branche_id = branche.id
WHERE
  branche.kommission_id=:id
GROUP BY branche.id;";

  $branchen = array();
//   $sth = $con->prepare($sql);
//   $sth->execute(array(':id' => $parlamentarier_id));
  $result = db_query($sql, array(':id' => $kommission_id));
//  $record = $result->fetchAssoc();

  //$branchen = $result->fetchAssoc();
  $branchen = $result->fetchAllAssoc('id', PDO::FETCH_ASSOC);
  //dpm($branchen, '$branchen');

  if (!$branchen) {
    return '<p>keine</p>';
//      throw new Exception('Parlamentarier ID not found');
  }

  $res = '';
  foreach($branchen as $branche) {
    $res .= '<h5>' . $branche['branche_name'] . '</h5>';
    //$res .= mandateList($con, $branche['id']);
    $res .= "<ul>\n" . $branche['interessengruppen'] . "\n</ul>";
  }

//   dpm($res, 'branchen');

  return $res;
}


function lobbywatch_parlamentarier_id($id, $name='') {

//   dpm($id, 'id');

  $url_name = lobbywatch_anzeige_name_for_url('parlamentarier', $id);
  if ($name !== $url_name) {
    drupal_goto("parlamentarier/$id/$url_name");
  }

  $markup = '';

  // Use the database we set up earlier
  // Ref: https://drupal.org/node/18429
  db_set_active('lobbywatch');

  try {
    $sql = "SET SESSION group_concat_max_len=5000;";
    db_query($sql);

    $sql = "SELECT parlamentarier.id, parlamentarier.anzeige_name as parlamentarier_name, parlamentarier.geburtstag, DATE_FORMAT(parlamentarier.geburtstag, '%d.%m.%Y') as geburtstag_formatted, parlamentarier.beruf, parlamentarier.im_rat_seit, DATE_FORMAT(parlamentarier.im_rat_seit, '%d.%m.%Y') as im_rat_seit_formatted, parlamentarier.kleinbild, parlamentarier.ratstyp, parlamentarier.kanton, parlamentarier.geschlecht, parlamentarier.homepage, parlamentarier.parlament_biografie_id, parlamentarier.partei, parlamentarier.partei_id,
    parlamentarier.name, parlamentarier.anzahl_kinder,
    GROUP_CONCAT(DISTINCT
      CONCAT('<li>', IF(interessenbindung.bis IS NOT NULL, '<s>', ''), '<a href=\"/organisation/', organisation.id, '\">', organisation.anzeige_name, '</a>',
      IF(organisation.rechtsform IS NULL OR TRIM(organisation.rechtsform) = '', '', CONCAT(', ', organisation.rechtsform)),
      IF(organisation.ort IS NULL OR TRIM(organisation.ort) = '', '', CONCAT(', ', organisation.ort)), ', ', CONCAT(UCASE(LEFT(interessenbindung.art, 1)), SUBSTRING(interessenbindung.art, 2)),
      IF(interessenbindung.funktion_im_gremium IS NULL OR TRIM(interessenbindung.funktion_im_gremium) = '', '', CONCAT(', ',CONCAT(UCASE(LEFT(interessenbindung.funktion_im_gremium, 1)), SUBSTRING(interessenbindung.funktion_im_gremium, 2)))),
      IF(TRUE OR interessenbindung.beschreibung IS NULL OR TRIM(interessenbindung.beschreibung) = '', '', CONCAT(', ',interessenbindung.beschreibung)),
      IF(interessenbindung.bis IS NOT NULL, CONCAT(', bis ', DATE_FORMAT(interessenbindung.bis, '%Y'), '</s>'), ''))
      ORDER BY organisation.anzeige_name
      SEPARATOR ' '
    ) interessenbindungen,
    GROUP_CONCAT(DISTINCT
      CONCAT('<li>', IF(v.bis IS NOT NULL, '<s>', ''), '<a href=\"/organisation/', organisation2.id, '\">', organisation2.anzeige_name, '</a>',
      IF(organisation2.rechtsform IS NULL OR TRIM(organisation2.rechtsform) = '', '', CONCAT(', ', organisation2.rechtsform)),
      IF(organisation2.ort IS NULL OR TRIM(organisation2.ort) = '', '', CONCAT(', ', organisation2.ort)),
      IF(FALSE AND v.beziehung = 'indirekt', CONCAT(', <em>', v.beziehung, '</em>'), ''),
      IF(v.bis IS NOT NULL, CONCAT(', bis ', DATE_FORMAT(v.bis, '%Y'), '</s>'), '')
      )
      ORDER BY organisation2.anzeige_name
      SEPARATOR ' '
    ) verbundene_organisationen,
    GROUP_CONCAT(DISTINCT
      CONCAT('<li>', IF(ik.bis IS NOT NULL, '<s>', ''), '<a href=\"/kommission/', kommission.id, '\">',
      kommission.name, ' (', kommission.abkuerzung, ')</a> ',
      IF(kommission.art IS NULL, '', CONCAT(', ', kommission.art)),
      IF(ik.bis IS NOT NULL, CONCAT(', bis ', DATE_FORMAT(ik.bis, '%Y'), '</s>'), '')
      )
      ORDER BY kommission.abkuerzung
      SEPARATOR ' '
      ) kommissionen_namen,
    GROUP_CONCAT(DISTINCT
      CONCAT('<li>', IF(zutrittsberechtigung.bis IS NOT NULL, '<s>', ''), '<a href=\"/zutrittsberechtigter/', zutrittsberechtigung.id, '\">',
      zutrittsberechtigung.name, '</a>, ',
      zutrittsberechtigung.funktion,
      IF(zutrittsberechtigung.beruf IS NULL OR TRIM(zutrittsberechtigung.beruf) = '', '', CONCAT(', ', zutrittsberechtigung.beruf)),
      IF(zutrittsberechtigung.bis IS NOT NULL, CONCAT(', bis ', DATE_FORMAT(zutrittsberechtigung.bis, '%Y'), '</s>'), ''))
      ORDER BY zutrittsberechtigung.name
      SEPARATOR ' '
    ) zutrittsberechtigungen
      FROM v_parlamentarier parlamentarier
      LEFT JOIN v_interessenbindung interessenbindung
      ON interessenbindung.parlamentarier_id = parlamentarier.id -- AND interessenbindung.bis IS NULL
      LEFT JOIN v_organisation organisation
      ON interessenbindung.organisation_id = organisation.id
      LEFT JOIN v_zutrittsberechtigung zutrittsberechtigung
      ON zutrittsberechtigung.parlamentarier_id = parlamentarier.id -- AND zutrittsberechtigung.bis IS NULL
      LEFT JOIN v_in_kommission ik
      ON parlamentarier.id = ik.parlamentarier_id -- AND ik.bis IS NULL
      LEFT JOIN v_kommission kommission
      ON ik.kommission_id=kommission.id
      LEFT JOIN v_organisation_parlamentarier_beide_indirekt v
      ON v.parlamentarier_id = parlamentarier.id -- AND v.bis IS NULL
      LEFT JOIN v_organisation organisation2
      ON organisation2.id = v.connector_organisation_id
      WHERE
      parlamentarier.id=:id
      GROUP BY parlamentarier.id";

    $result = db_query($sql, array(':id' => $id));

  //     dpm($result, 'result');

      $record = $result->fetchAssoc();
      $gaeste = lobbywatch_gaesteMitMandaten($id);

  //     dpm($record, '$record');

  } finally {
    // Go back to the default database,
    // otherwise Drupal will not be able to access it's own data later on.
    db_set_active();
  }

  if ($record) {
      $ratstyp = preg_replace('/SR/i', 'Ständerat', preg_replace('/NR/i', 'Nationalrat', check_plain($record['ratstyp'])));
      // TODO security, check content
      $parlamentarier_name = check_plain($record["parlamentarier_name"]);
      $markup .= '<h2>' . $parlamentarier_name . '</h2>' .
      '<img src="/sites/lobbywatch.ch/app/auswertung/parlamentarierBilder/' . check_plain($record['kleinbild']) . '" alt="' . $parlamentarier_name . '">' .
      '<p>Lobbyfaktor: <b>XY</b></p>' .
      '<table border="0">' .
      '<tr><td>Rat:</td><td>' . $ratstyp . '</td></tr>' .
      '<tr><td>Kanton:</td><td>' . check_plain($record['kanton']) . '</td></tr>' .
      '<tr><td>Partei:</td><td>' . l($record['partei'], 'partei/' . $record['partei_id']) . '</td></tr>' .
      '<tr><td>Im Rat seit:</td><td>' . years_months(check_plain($record['im_rat_seit'])) . ' (' . check_plain($record['im_rat_seit_formatted']) . ')' . '</td></tr>' .
      '<tr><td>Alter:</td><td>' . years(check_plain($record['geburtstag'])) . ' (' . check_plain($record['geburtstag_formatted']) . ')' . '</td></tr>' .
      '<tr><td>Beruf:</td><td>' . check_plain($record['beruf']) . '</td></tr>' .
      '<tr><td>Kinder:</td><td>' . check_plain($record['anzahl_kinder']) . '</td></tr>' .
      '<tr><td>Homepage:</td><td>' . l($record['homepage'], $record['homepage']) . '</td></tr>' .
      '<tr><td>Parlament.ch Webseite:</td><td>' . l($record['name'], 'http://www.parlament.ch/d/suche/seiten/biografie.aspx?biografie_id=' . $record['parlament_biografie_id']) . '</td></tr>' .
      '</table>' .
      '<h4>Kommissionen</h4><ul>' . $record['kommissionen_namen'] . '</ul>' .
      '<h4>Interessenbindungen</h4><ul>' . $record['interessenbindungen'] . '</ul>' .
      '<h4>Gäste</h4><ul>' . $record['zutrittsberechtigungen'] . '</ul>' .
      '<h4>Mandate der Gäste</h4>' . $gaeste .
      '<h4>Organisationen mit einer Verbindung</h4>'
      . '<p>Auch indirekte Verbindungen werden aufgeführt.</p>'
      . '<ul>' . $record['verbundene_organisationen'] . '</ul>';

    $build = array();
    $build['terms'] = array(
      '#weight' => -5,
      '#prefix' => '<div class="lobbywatch">',
      '#markup' => $markup,
      '#suffix' => '</div>',
      );

      return $build;
  } else {
    drupal_goto('parlamentarier');
  }
}

/**
 * TODO
 */
function lobbywatch_organisation_list() {
  $markup = t('<p>Liste der Organisationen</p>');
  $markup .= '<ul>';

  // Use the database we set up earlier
  // Ref: https://drupal.org/node/18429
  db_set_active('lobbywatch');

  $result = db_query("SELECT * FROM v_organisation organisation ORDER BY organisation.anzeige_name");

  while ($record = $result->fetchAssoc()) {
    $markup .= '<li><a href="/organisation/' . check_plain($record['id']) . '">' . check_plain($record['anzeige_name']) . '</a>';
  }

  $markup .= '</ul>';

  // Go back to the default database,
  // otherwise Drupal will not be able to access it's own data later on.
  db_set_active();

  $build = array();
  $build['terms'] = array(
    '#weight' => -5,
    '#prefix' => '<div class="lobbywatch">',
    '#markup' => $markup,
    '#suffix' => '</div>',
    );

    return $build;
}

function lobbywatch_organisation_id($id, $name = '') {

  //   dpm($id, 'id');

  $url_name = lobbywatch_anzeige_name_for_url('organisation', $id);
  if ($name !== $url_name) {
    drupal_goto("organisation/$id/$url_name");
  }

  $markup = '';

  // Use the database we set up earlier
  // Ref: https://drupal.org/node/18429
  db_set_active('lobbywatch');

  /*
-- Organisationen für welche eine PR-Agentur arbeitet.
-- Connector: organisation_beziehung.organisation_id
CREATE OR REPLACE VIEW `v_organisation_beziehung_arbeitet_fuer` AS
SELECT organisation.anzeige_name as organisation_name, organisation_beziehung.art, organisation_beziehung.von, organisation_beziehung.bis, organisation.*
FROM v_organisation_beziehung organisation_beziehung
INNER JOIN v_organisation organisation
  ON organisation_beziehung.ziel_organisation_id = organisation.id
WHERE
  organisation_beziehung.art = 'arbeitet fuer'
ORDER BY organisation.anzeige_name;

-- Organisationen, die eine PR-Firma beauftragt haben.
-- Connector: organisation_beziehung.ziel_organisation_id
-- Reverse Beziehung
CREATE OR REPLACE VIEW `v_organisation_beziehung_auftraggeber_fuer` AS
SELECT organisation.anzeige_name as organisation_name, organisation_beziehung.art, organisation_beziehung.von, organisation_beziehung.bis, organisation.*
FROM v_organisation_beziehung organisation_beziehung
INNER JOIN v_organisation organisation
  ON organisation_beziehung.organisation_id = organisation.id
WHERE
  organisation_beziehung.art = 'arbeitet fuer'
ORDER BY organisation.anzeige_name;

-- Organisationen, in welcher eine Organisation Mitglied ist.
-- Connector: organisation_beziehung.organisation_id
CREATE OR REPLACE VIEW `v_organisation_beziehung_mitglied_von` AS
SELECT organisation.anzeige_name as organisation_name, organisation_beziehung.art, organisation_beziehung.von, organisation_beziehung.bis, organisation.*
FROM v_organisation_beziehung organisation_beziehung
INNER JOIN v_organisation organisation
  ON organisation_beziehung.ziel_organisation_id = organisation.id
WHERE
  organisation_beziehung.art = 'mitglied von'
ORDER BY organisation.anzeige_name;

-- Mitgliedsorganisationen
-- Connector: organisation_beziehung.ziel_organisation_id
-- Reverse Beziehung
CREATE OR REPLACE VIEW `v_organisation_beziehung_mitglieder` AS
SELECT organisation.anzeige_name as organisation_name, organisation_beziehung.art, organisation_beziehung.von, organisation_beziehung.bis, organisation.*
FROM v_organisation_beziehung organisation_beziehung
INNER JOIN v_organisation organisation
  ON organisation_beziehung.organisation_id = organisation.id
WHERE
  organisation_beziehung.art = 'mitglied von'
ORDER BY organisation.anzeige_name;

-- Muttergesellschaften.
-- Connector: organisation_beziehung.organisation_id
CREATE OR REPLACE VIEW `v_organisation_beziehung_muttergesellschaft` AS
SELECT organisation.anzeige_name as organisation_name, organisation_beziehung.art, organisation_beziehung.von, organisation_beziehung.bis, organisation.*
FROM v_organisation_beziehung organisation_beziehung
INNER JOIN v_organisation organisation
  ON organisation_beziehung.ziel_organisation_id = organisation.id
WHERE
  organisation_beziehung.art = 'tochtergesellschaft von'
ORDER BY organisation.anzeige_name;

-- Tochtergesellschaften
-- Connector: organisation_beziehung.ziel_organisation_id
-- Reverse Beziehung
CREATE OR REPLACE VIEW `v_organisation_beziehung_tochtergesellschaften` AS
SELECT organisation.anzeige_name as organisation_name, organisation_beziehung.art, organisation_beziehung.von, organisation_beziehung.bis, organisation.*
FROM v_organisation_beziehung organisation_beziehung
INNER JOIN v_organisation organisation
  ON organisation_beziehung.organisation_id = organisation.id
WHERE
  organisation_beziehung.art = 'tochtergesellschaft von'
ORDER BY organisation.anzeige_name;
*/

  try {
  $sql_arbeitet = "SELECT organisation.*,
      GROUP_CONCAT(DISTINCT
        CONCAT('<li>', IF(v.bis IS NOT NULL, '<s>', ''), '<a href=\"/parlamentarier/', parlamentarier.id, '\">', parlamentarier.anzeige_name, '</a>',
        ', ', parlamentarier.ratstyp,
        IF(parlamentarier.partei IS NULL, '', CONCAT(', ', parlamentarier.partei)),
        ', ', parlamentarier.kanton,
        IF(FALSE AND v.beziehung = 'indirekt', CONCAT(', <em>', v.beziehung, '</em>'), ''),
        IF(v.bis IS NOT NULL, CONCAT(', bis ', DATE_FORMAT(v.bis, '%Y'), '</s>'), '')
        )
        ORDER BY parlamentarier.anzeige_name
        SEPARATOR ' '
      ) verbundene_parlamentarier,
      GROUP_CONCAT(DISTINCT
        CONCAT('<li>', IF(organisation_arbeitet_fuer.bis IS NOT NULL, '<s>', ''), '<a href=\"/organisation/', organisation_arbeitet_fuer.id, '\">', organisation_arbeitet_fuer.anzeige_name, '</a>',
        IF(organisation_arbeitet_fuer.rechtsform IS NULL OR TRIM(organisation_arbeitet_fuer.rechtsform) = '', '', CONCAT(', ', organisation_arbeitet_fuer.rechtsform)),
        IF(organisation_arbeitet_fuer.ort IS NULL OR TRIM(organisation_arbeitet_fuer.ort) = '', '', CONCAT(', ', organisation_arbeitet_fuer.ort)),
        IF(organisation_arbeitet_fuer.bis IS NOT NULL, CONCAT(', bis ', DATE_FORMAT(organisation_arbeitet_fuer.bis, '%Y'), '</s>'), '')
        )
        ORDER BY organisation_arbeitet_fuer.anzeige_name
        SEPARATOR ' '
      ) arbeitet_fuer,
      GROUP_CONCAT(DISTINCT
        CONCAT('<li>', IF(organisation_auftraggeber_fuer.bis IS NOT NULL, '<s>', ''), '<a href=\"/organisation/', organisation_auftraggeber_fuer.id, '\">', organisation_auftraggeber_fuer.anzeige_name, '</a>',
        IF(organisation_auftraggeber_fuer.rechtsform IS NULL OR TRIM(organisation_auftraggeber_fuer.rechtsform) = '', '', CONCAT(', ', organisation_auftraggeber_fuer.rechtsform)),
        IF(organisation_auftraggeber_fuer.ort IS NULL OR TRIM(organisation_auftraggeber_fuer.ort) = '', '', CONCAT(', ', organisation_auftraggeber_fuer.ort)),
        IF(organisation_auftraggeber_fuer.bis IS NOT NULL, CONCAT(', bis ', DATE_FORMAT(organisation_auftraggeber_fuer.bis, '%Y'), '</s>'), '')
        )
        ORDER BY organisation_auftraggeber_fuer.anzeige_name
        SEPARATOR ' '
      ) auftraggeber_fuer
  FROM v_organisation organisation
  LEFT JOIN v_organisation_parlamentarier_beide_indirekt v
  ON v.connector_organisation_id = organisation.id -- AND v.bis IS NULL
  LEFT JOIN v_parlamentarier parlamentarier
  ON parlamentarier.id = v.parlamentarier_id
  LEFT JOIN v_organisation_beziehung_arbeitet_fuer organisation_arbeitet_fuer
  ON organisation_arbeitet_fuer.organisation_id = organisation.id
  LEFT JOIN v_organisation_beziehung_auftraggeber_fuer organisation_auftraggeber_fuer
  ON organisation_auftraggeber_fuer.ziel_organisation_id = organisation.id
  WHERE organisation.id=:id
  GROUP BY organisation.id";

    $sql_mitglied = "SELECT organisation.*,
      GROUP_CONCAT(DISTINCT
        CONCAT('<li>', IF(organisation_mitglied_von.bis IS NOT NULL, '<s>', ''), '<a href=\"/organisation/', organisation_mitglied_von.id, '\">', organisation_mitglied_von.anzeige_name, '</a>',
        IF(organisation_mitglied_von.rechtsform IS NULL OR TRIM(organisation_mitglied_von.rechtsform) = '', '', CONCAT(', ', organisation_mitglied_von.rechtsform)),
        IF(organisation_mitglied_von.ort IS NULL OR TRIM(organisation_mitglied_von.ort) = '', '', CONCAT(', ', organisation_mitglied_von.ort)),
        IF(organisation_mitglied_von.bis IS NOT NULL, CONCAT(', bis ', DATE_FORMAT(organisation_mitglied_von.bis, '%Y'), '</s>'), '')
        )
        ORDER BY organisation_mitglied_von.anzeige_name
        SEPARATOR ' '
      ) mitglied_von,
      GROUP_CONCAT(DISTINCT
        CONCAT('<li>', IF(organisation_mitglieder.bis IS NOT NULL, '<s>', ''), '<a href=\"/organisation/', organisation_mitglieder.id, '\">', organisation_mitglieder.anzeige_name, '</a>',
        IF(organisation_mitglieder.rechtsform IS NULL OR TRIM(organisation_mitglieder.rechtsform) = '', '', CONCAT(', ', organisation_mitglieder.rechtsform)),
        IF(organisation_mitglieder.ort IS NULL OR TRIM(organisation_mitglieder.ort) = '', '', CONCAT(', ', organisation_mitglieder.ort)),
        IF(organisation_mitglieder.bis IS NOT NULL, CONCAT(', bis ', DATE_FORMAT(organisation_mitglieder.bis, '%Y'), '</s>'), '')
        )
        ORDER BY organisation_mitglieder.anzeige_name
        SEPARATOR ' '
      ) mitglieder
  FROM v_organisation organisation
  LEFT JOIN v_organisation_beziehung_mitglied_von organisation_mitglied_von
  ON organisation_mitglied_von.organisation_id = organisation.id
  LEFT JOIN v_organisation_beziehung_mitglieder organisation_mitglieder
  ON organisation_mitglieder.ziel_organisation_id = organisation.id
  WHERE organisation.id=:id
  GROUP BY organisation.id";

     $sql_tochter = "SELECT organisation.*,
      GROUP_CONCAT(DISTINCT
        CONCAT('<li>', IF(organisation_muttergesellschaft.bis IS NOT NULL, '<s>', ''), '<a href=\"/organisation/', organisation_muttergesellschaft.id, '\">', organisation_muttergesellschaft.anzeige_name, '</a>',
        IF(organisation_muttergesellschaft.rechtsform IS NULL OR TRIM(organisation_muttergesellschaft.rechtsform) = '', '', CONCAT(', ', organisation_muttergesellschaft.rechtsform)),
        IF(organisation_muttergesellschaft.ort IS NULL OR TRIM(organisation_muttergesellschaft.ort) = '', '', CONCAT(', ', organisation_muttergesellschaft.ort)),
        IF(organisation_muttergesellschaft.bis IS NOT NULL, CONCAT(', bis ', DATE_FORMAT(organisation_muttergesellschaft.bis, '%Y'), '</s>'), '')
        )
        ORDER BY organisation_muttergesellschaft.anzeige_name
        SEPARATOR ' '
      ) muttergesellschaft,
      GROUP_CONCAT(DISTINCT
        CONCAT('<li>', IF(organisation_tochtergesellschaften.bis IS NOT NULL, '<s>', ''), '<a href=\"/organisation/', organisation_tochtergesellschaften.id, '\">', organisation_tochtergesellschaften.anzeige_name, '</a>',
        IF(organisation_tochtergesellschaften.rechtsform IS NULL OR TRIM(organisation_tochtergesellschaften.rechtsform) = '', '', CONCAT(', ', organisation_tochtergesellschaften.rechtsform)),
        IF(organisation_tochtergesellschaften.ort IS NULL OR TRIM(organisation_tochtergesellschaften.ort) = '', '', CONCAT(', ', organisation_tochtergesellschaften.ort)),
        IF(organisation_tochtergesellschaften.bis IS NOT NULL, CONCAT(', bis ', DATE_FORMAT(organisation_tochtergesellschaften.bis, '%Y'), '</s>'), '')
        )
        ORDER BY organisation_tochtergesellschaften.anzeige_name
        SEPARATOR ' '
      ) tochtergesellschaften
  FROM v_organisation organisation
  LEFT JOIN v_organisation_beziehung_muttergesellschaft organisation_muttergesellschaft
  ON organisation_muttergesellschaft.organisation_id = organisation.id
  LEFT JOIN v_organisation_beziehung_tochtergesellschaften organisation_tochtergesellschaften
  ON organisation_tochtergesellschaften.ziel_organisation_id = organisation.id
  WHERE organisation.id=:id
  GROUP BY organisation.id";

  $result_arbeitet = db_query($sql_arbeitet, array(':id' => $id));
  $record = $result_arbeitet->fetchAssoc();

//   dpm($record_arbeitet, '$record_arbeitet');

  $result_mitglied = db_query($sql_mitglied, array(':id' => $id));
  $record_mitglied = $result_mitglied->fetchAssoc();
  $record['mitglied_von'] = $record_mitglied['mitglied_von'];
  $record['mitglieder'] = $record_mitglied['mitglieder'];

//   dpm($record_mitglied, '$record_mitglied');

  $result_tochter = db_query($sql_tochter, array(':id' => $id));
  $record_tochter = $result_tochter->fetchAssoc();
  $record['muttergesellschaft'] = $record_tochter['muttergesellschaft'];
  $record['tochtergesellschaften'] = $record_tochter['tochtergesellschaften'];

//   dpm($record_tochter, '$record_tochter');

//   $record = array_merge($record_arbeitet, $record_mitglied, $record_tocher);

//      dpm($record, '$record');
  } finally {
    // Go back to the default database,
    // otherwise Drupal will not be able to access it's own data later on.
    db_set_active();
  }
  if ($record) {
    $markup .= '<h2>' . check_plain($record["anzeige_name"]) . '</h2>'
//     . '<h3>Informationen</h3>'
    . '<table border="0">'
//     . '<li>Vernehmlassung: ' . $record['vernehmlassung']
    . '<tr><td>Rechtsform</td><td>' . check_plain($record['rechtsform']) . '</td></tr>'
    . '<tr><td>Ort</td><td>' . check_plain($record['ort']) . '</td></tr>'
    . '<tr><td>Branche</td><td>' . l($record['branche'], 'branche/' . $record['branche_id']) . '</td></tr>'
    . '<tr><td>Interessengruppe</td><td>' . l($record['interessengruppe'], 'interessengruppe/' . $record['interessengruppe_id']) . '</td></tr>'
    . '<tr><td>Homepage:</td><td>' . l($record['homepage'], $record['homepage']) . '</td></tr>'
    . '<tr><td>Handelsregister:</td><td>' . l($record['handelsregister_url'], $record['handelsregister_url']) . '</td></tr>'
    . '</table>';
    if ($record['arbeitet_fuer']) {
      $markup .= '<h3>Arbeitet für</h3>'
      . '<ul>'
      . $record['arbeitet_fuer']
      . '</ul>';
    }
    if ($record['auftraggeber_fuer']) {
      $markup .= '<h3>Auftraggeber für</h3>'
      . '<ul>'
      . $record['auftraggeber_fuer']
      . '</ul>';
    }
    if ($record['mitglied_von']) {
      $markup .= '<h3>Mitglied von</h3>'
      . '<ul>'
      . $record['mitglied_von']
      . '</ul>';
    }
    if ($record['mitglieder']) {
      $markup .= '<h3>Mitglieder</h3>'
      . '<ul>'
      . $record['mitglieder']
      . '</ul>';
    }
    if ($record['muttergesellschaft']) {
      $markup .= '<h3>Muttergesellschaft</h3>'
      . '<ul>'
      . $record['muttergesellschaft']
      . '</ul>';
    }
    if ($record['tochtergesellschaften']) {
      $markup .= '<h3>Tochtergesellschaften</h3>'
      . '<ul>'
      . $record['tochtergesellschaften']
      . '</ul>';
    }
    if ($record['verbundene_parlamentarier']) {
      $markup .= '<h3>Parlamentarierverbindungen</h3>'
      . '<ul>'
      . $record['verbundene_parlamentarier']
      . '</ul>';
    }

    $build = array();
    $build['terms'] = array(
      '#weight' => -5,
      '#prefix' => '<div class="lobbywatch">',
      '#markup' => $markup,
      '#suffix' => '</div>',
      );

      return $build;
  } else {
    drupal_goto('organisation');
  }
}

/**
 * TODO
 */
function lobbywatch_kommission_list() {
  $markup = t('<p>Liste der Kommissionen</p>');
  $markup .= '<ul>';

  // Use the database we set up earlier
  // Ref: https://drupal.org/node/18429
  db_set_active('lobbywatch');

  $result = db_query("SELECT kommission.*
  FROM `v_kommission` kommission
  ORDER BY kommission.anzeige_name");

  while ($record = $result->fetchAssoc()) {
    $markup .= '<li><a href="/kommission/' . check_plain($record['id']) . '">' . check_plain($record['anzeige_name']) . '</a>';
  }

  $markup .= '</ul>';

  // Go back to the default database,
  // otherwise Drupal will not be able to access it's own data later on.
  db_set_active();

  $build = array();
  $build['terms'] = array(
    '#weight' => -5,
    '#prefix' => '<div class="lobbywatch">',
    '#markup' => $markup,
    '#suffix' => '</div>',
    );

    return $build;
}

function lobbywatch_kommission_id($id, $name = '') {

  //   dpm($id, 'id');

  $url_name = lobbywatch_anzeige_name_for_url('kommission', $id);
  if ($name !== $url_name) {
    drupal_goto("kommission/$id/$url_name");
  }

  $markup = '';

  // Use the database we set up earlier
  // Ref: https://drupal.org/node/18429
  db_set_active('lobbywatch');

  try {
    $sql = "SET SESSION group_concat_max_len=5000;";
    db_query($sql);

    $sql = "SELECT kommission.*,
      GROUP_CONCAT(DISTINCT
        CONCAT('<li><a href=\"/parlamentarier/', parlamentarier.parlamentarier_id, '\">', parlamentarier.parlamentarier_name, '</a>',
        ', ', parlamentarier.ratstyp,
        IF(parlamentarier.partei IS NULL, '', CONCAT(', ', parlamentarier.partei)),
        ', ', parlamentarier.kanton
        )
        ORDER BY parlamentarier.parlamentarier_name
        SEPARATOR ' '
      ) parlamentarier,
      GROUP_CONCAT(DISTINCT
        CONCAT('<li><a href=\"/branche/', branche.id, '\">', branche.anzeige_name, '</a>'
        )
        ORDER BY branche.anzeige_name
        SEPARATOR ' '
      ) branchen
  FROM `v_kommission` kommission
  LEFT JOIN `v_in_kommission_parlamentarier` parlamentarier
  ON kommission.id = parlamentarier.kommission_id
  LEFT JOIN `v_branche` branche
  ON kommission.id = branche.kommission_id
  WHERE kommission.id=:id
  GROUP BY kommission.id";

  $result = db_query($sql, array(':id' => $id));

  //     dpm($result, 'result');

  $record = $result->fetchAssoc();
  $interessengruppen = lobbywatch_brancheMitInteressengruppen($id);
//   dpm($record, '$record');
  } finally {
    // Go back to the default database,
    // otherwise Drupal will not be able to access it's own data later on.
    db_set_active();
  }
  if ($record) {
    $markup .= '<h2>' . check_plain($record["anzeige_name"]) . '</h2>'
    . '<table border="0">'
    . '<tr><td>Abkürzung</td><td>' . check_plain($record['abkuerzung']) . '</td></tr>'
    . '<tr><td>Parlament.ch Link</td><td>' . (isset($record['parlament_url']) ? l($record['anzeige_name'], $record['parlament_url']) : '') . '</td></tr>'
    . '<tr><td>Beschreibung</td><td>' . check_plain($record['beschreibung']) . '</td></tr>'
    . '<tr><td>Typ</td><td>' . check_plain($record['typ']) . '</td></tr>'
    . '<tr><td>Art</td><td>' . check_plain($record['art']) . '</td></tr>'
    . '</table>'
    . '<h3>Sachbereiche</h3>'
    . '<ul>'
    . implode(array_map(function($value) {return '<li>' . $value;}, explode(';', check_plain($record['sachbereiche']))))
    . '</ul>'
    // TODO präsidium
    . '<h3>Mitglieder</h3>'
    . '<ul>'
    . $record['parlamentarier']
    . '</ul>'
    . '<h3>Branchen</h3>'
    . '<ul>'
    . $record['branchen']
    . '</ul>'
    . '<h3>Interessengruppen</h3>'
    . $interessengruppen
    ;

    $build = array();
    $build['terms'] = array(
      '#weight' => -5,
      '#prefix' => '<div class="lobbywatch">',
      '#markup' => $markup,
      '#suffix' => '</div>',
      );

      return $build;
  } else {
    drupal_goto('kommission');
  }
}

  /**
 * TODO
 */
function lobbywatch_partei_list() {
  $markup = t('<p>Liste der Parteien</p>');
  $markup .= '<ul>';

  // Use the database we set up earlier
  // Ref: https://drupal.org/node/18429
  db_set_active('lobbywatch');

  $result = db_query("SELECT * FROM v_partei partei ORDER BY partei.anzeige_name");

  while ($record = $result->fetchAssoc()) {
    $markup .= '<li><a href="/partei/' . check_plain($record['id']) . '">' . check_plain($record['anzeige_name']) . '</a>';
  }

  $markup .= '</ul>';

  // Go back to the default database,
  // otherwise Drupal will not be able to access it's own data later on.
  db_set_active();

  $build = array();
  $build['terms'] = array(
    '#weight' => -5,
    '#prefix' => '<div class="lobbywatch">',
    '#markup' => $markup,
    '#suffix' => '</div>',
    );

    return $build;
}

function lobbywatch_partei_id($id, $name = '') {

  //   dpm($id, 'id');

  $url_name = lobbywatch_anzeige_name_for_url('partei', $id);
  if ($name !== $url_name) {
    drupal_goto("partei/$id/$url_name");
  }

  $markup = '';

  // Use the database we set up earlier
  // Ref: https://drupal.org/node/18429
  db_set_active('lobbywatch');

  try {
    $sql = "SET SESSION group_concat_max_len=5000;";
    db_query($sql);

  $sql = "SELECT partei.*,
      GROUP_CONCAT(DISTINCT
        CONCAT('<li><a href=\"/parlamentarier/', parlamentarier.id, '\">', parlamentarier.anzeige_name, '</a>',
        ', ', parlamentarier.ratstyp,
        IF(parlamentarier.partei IS NULL, '', CONCAT(', ', parlamentarier.partei)),
        ', ', parlamentarier.kanton
        )
        ORDER BY parlamentarier.anzeige_name
        SEPARATOR ' '
      ) mitglieder
  FROM `v_partei` partei
  LEFT JOIN `v_parlamentarier` parlamentarier
  ON parlamentarier.partei_id = partei.id
  WHERE partei.id=:id
  GROUP BY partei.id";

  $result = db_query($sql, array(':id' => $id));

  //     dpm($result, 'result');

  $record = $result->fetchAssoc();
//   dpm($record, '$record');
  } finally {
    // Go back to the default database,
    // otherwise Drupal will not be able to access it's own data later on.
    db_set_active();
  }
  if ($record) {
    $markup .= '<h2>' . check_plain($record["anzeige_name"]) . '</h2>'
    . '<h3>Mitglieder</h3>'
    . '<ul>'
    . $record['mitglieder']
    . '</ul>';

    $build = array();
    $build['terms'] = array(
      '#weight' => -5,
      '#prefix' => '<div class="lobbywatch">',
      '#markup' => $markup,
      '#suffix' => '</div>',
      );

      return $build;
  } else {
    drupal_goto('partei');
  }

}

  /**
 * TODO
 */
function lobbywatch_branche_list() {
  $markup = t('<p>Liste der Branchen</p>');
  $markup .= '<ul>';

  // Use the database we set up earlier
  // Ref: https://drupal.org/node/18429
  db_set_active('lobbywatch');

  $result = db_query("SELECT * FROM v_branche branche ORDER BY branche.anzeige_name");

  while ($record = $result->fetchAssoc()) {
    $markup .= '<li><a href="/branche/' . check_plain($record['id']) . '">' . check_plain($record['anzeige_name']) . '</a>';
  }

  $markup .= '</ul>';

  // Go back to the default database,
  // otherwise Drupal will not be able to access it's own data later on.
  db_set_active();

  $build = array();
  $build['terms'] = array(
    '#weight' => -5,
    '#prefix' => '<div class="lobbywatch">',
    '#markup' => $markup,
    '#suffix' => '</div>',
    );

    return $build;
}

function lobbywatch_branche_id($id, $name = '') {

  //   dpm($id, 'id');

  $url_name = lobbywatch_anzeige_name_for_url('branche', $id);
  if ($name !== $url_name) {
    drupal_goto("branche/$id/$url_name");
  }

  $markup = '';

  // Use the database we set up earlier
  // Ref: https://drupal.org/node/18429
  db_set_active('lobbywatch');

  try {
    $sql = "SET SESSION group_concat_max_len=5000;";
    db_query($sql);

  $sql = "SELECT *,
GROUP_CONCAT(DISTINCT
    CONCAT('<li><a href=\"/interessengruppe/', interessengruppe.id, '\">', interessengruppe.anzeige_name, '</a>',
    IF(interessengruppe.beschreibung IS NULL OR TRIM(interessengruppe.beschreibung) = '', '', CONCAT('<small class=\"desc\">, &quot;', interessengruppe.beschreibung, '&quot;</small>')))
    ORDER BY interessengruppe.anzeige_name
    SEPARATOR ' '
) interessengruppen
  FROM v_branche branche
  LEFT JOIN `v_interessengruppe` interessengruppe
  ON interessengruppe.branche_id = branche.id
  WHERE branche.id=:id
  GROUP BY branche.id";

  $result = db_query($sql, array(':id' => $id));

  //     dpm($result, 'result');

  $record = $result->fetchAssoc();
//   dpm($record, '$record');
  } finally {
    // Go back to the default database,
    // otherwise Drupal will not be able to access it's own data later on.
    db_set_active();
  }
  if ($record) {
    $markup .= '<h2>' . check_plain($record["anzeige_name"]) . '</h2>'
    . '<table border="0">'
//     . '<li>Vernehmlassung: ' . $record['vernehmlassung']
    . '<tr><td>Zuständige Kommission</td><td>' . l($record['kommission'], 'kommission/' . $record['kommission_id']) . '</td></tr>'
    . '<tr><td>Beschreibung</td><td>' . check_plain($record['beschreibung']) . '</td></tr>'
    . '</table>'
    . '<h3>Interessengruppen</h3>'
    . '<ul>'
//     . '<li>Vernehmlassung: ' . $record['vernehmlassung']
//     . '<li>Rechtsform: ' . check_plain($record['rechtsform'])
    . $record['interessengruppen']
    . '</ul>';

    $build = array();
    $build['terms'] = array(
      '#weight' => -5,
      '#prefix' => '<div class="lobbywatch">',
      '#markup' => $markup,
      '#suffix' => '</div>',
      );

      return $build;
  } else {
    drupal_goto('branche');
  }

}

  /**
 * TODO
 */
function lobbywatch_interessengruppe_list() {
  $markup = t('<p>Liste der Interessengruppen</p>');
  $markup .= '<ul>';

  // Use the database we set up earlier
  // Ref: https://drupal.org/node/18429
  db_set_active('lobbywatch');

  $result = db_query("SELECT * FROM v_interessengruppe interessengruppe ORDER BY interessengruppe.anzeige_name");

  while ($record = $result->fetchAssoc()) {
    $markup .= '<li><a href="/interessengruppe/' . check_plain($record['id']) . '">' . check_plain($record['anzeige_name']) . '</a>';
  }

  $markup .= '</ul>';

  // Go back to the default database,
  // otherwise Drupal will not be able to access it's own data later on.
  db_set_active();

  $build = array();
  $build['terms'] = array(
    '#weight' => -5,
    '#prefix' => '<div class="lobbywatch">',
    '#markup' => $markup,
    '#suffix' => '</div>',
    );

    return $build;
}

function lobbywatch_interessengruppe_id($id, $name = '') {

  //   dpm($id, 'id');

  $url_name = lobbywatch_anzeige_name_for_url('interessengruppe', $id);
  if ($name !== $url_name) {
    drupal_goto("interessengruppe/$id/$url_name");
  }

  $markup = '';

  // Use the database we set up earlier
  // Ref: https://drupal.org/node/18429
  db_set_active('lobbywatch');

  try {
  $sql = "SELECT * FROM v_interessengruppe interessengruppe WHERE interessengruppe.id=:id";

  $result = db_query($sql, array(':id' => $id));

  //     dpm($result, 'result');

  $record = $result->fetchAssoc();
//   dpm($record, '$record');
  } finally {
    // Go back to the default database,
    // otherwise Drupal will not be able to access it's own data later on.
    db_set_active();
  }
  if ($record) {
    $markup .= '<h2>' . check_plain($record["anzeige_name"]) . '</h2>'
    . '<table border="0">'
//     . '<li>Vernehmlassung: ' . $record['vernehmlassung']
    . '<tr><td>Branche</td><td>' . l($record['branche'], 'branche/' . $record['branche_id']) . '</td></tr>'
    . '<tr><td>Beschreibung</td><td>' . check_plain($record['beschreibung']) . '</td></tr>'
    . '<tr><td>Zuständige Kommission</td><td>' . l($record['kommission'], 'kommission/' . $record['kommission_id']) . '</td></tr>'
    . '</table>';

    $build = array();
    $build['terms'] = array(
      '#weight' => -5,
      '#prefix' => '<div class="lobbywatch">',
      '#markup' => $markup,
      '#suffix' => '</div>',
      );

      return $build;
  } else {
    drupal_goto('interessengruppe');
  }

}

  /**
 * TODO
 */
function lobbywatch_zutrittsberechtigung_list() {
  $markup = t('<p>Liste der Zutrittsberechtigten</p>');
  $markup .= '<ul>';

  // Use the database we set up earlier
  // Ref: https://drupal.org/node/18429
  db_set_active('lobbywatch');

  $result = db_query("SELECT * FROM v_zutrittsberechtigung zutrittsberechtigung ORDER BY zutrittsberechtigung.anzeige_name");

  while ($record = $result->fetchAssoc()) {
    $markup .= '<li><a href="/zutrittsberechtigter/' . check_plain($record['id']) . '">' . check_plain($record['anzeige_name']) . '</a>';
  }

  $markup .= '</ul>';

  // Go back to the default database,
  // otherwise Drupal will not be able to access it's own data later on.
  db_set_active();

  $build = array();
  $build['terms'] = array(
    '#weight' => -5,
    '#prefix' => '<div class="lobbywatch">',
    '#markup' => $markup,
    '#suffix' => '</div>',
    );

    return $build;
}

function lobbywatch_zutrittsberechtigung_id($id, $name = '') {

  //   dpm($id, 'id');

  $url_name = lobbywatch_anzeige_name_for_url('zutrittsberechtigung', $id);
  if ($name !== $url_name) {
    drupal_goto("zutrittsberechtigter/$id/$url_name");
  }

  $markup = '';

  // Use the database we set up earlier
  // Ref: https://drupal.org/node/18429
  db_set_active('lobbywatch');

  try {
  $sql = "SELECT zutrittsberechtigung.*,
  GROUP_CONCAT(DISTINCT
    CONCAT('<li>', IF(mandat.bis IS NOT NULL, '<s>', ''), '<a href=\"/organisation/', organisation.id, '\">', organisation.anzeige_name, '</a>',
    IF(organisation.rechtsform IS NULL OR TRIM(organisation.rechtsform) = '', '', CONCAT(', ', organisation.rechtsform)), IF(organisation.ort IS NULL OR TRIM(organisation.ort) = '', '', CONCAT(', ', organisation.ort)), ', ', CONCAT(UCASE(LEFT(mandat.art, 1)), SUBSTRING(mandat.art, 2)),
    IF(mandat.funktion_im_gremium IS NULL OR TRIM(mandat.funktion_im_gremium) = '', '', CONCAT(', ',CONCAT(UCASE(LEFT(mandat.funktion_im_gremium, 1)), SUBSTRING(mandat.funktion_im_gremium, 2)))),
    IF(TRUE AND (mandat.beschreibung IS NULL OR TRIM(mandat.beschreibung) = ''), '', CONCAT('<small class=\"desc\">, &quot;', mandat.beschreibung, '&quot;</small>')),
    IF(mandat.bis IS NOT NULL, CONCAT(', bis ', DATE_FORMAT(mandat.bis, '%Y'), '</s>'), ''))
    ORDER BY organisation.anzeige_name
    SEPARATOR ' '
) mandate
FROM v_zutrittsberechtigung zutrittsberechtigung
LEFT JOIN v_mandat mandat
  ON mandat.zutrittsberechtigung_id = zutrittsberechtigung.id -- AND mandat.bis IS NULL
LEFT JOIN v_organisation organisation
  ON mandat.organisation_id = organisation.id
WHERE
  zutrittsberechtigung.id=:id
GROUP BY zutrittsberechtigung.id;";

  $result = db_query($sql, array(':id' => $id));

  //     dpm($result, 'result');

  $record = $result->fetchAssoc();
//   dpm($record, '$record');
  } finally {
    // Go back to the default database,
    // otherwise Drupal will not be able to access it's own data later on.
    db_set_active();
  }
  if ($record) {
    $markup .= '<h2>' . check_plain($record["anzeige_name"]) . '</h2>'
   . '<table border="0">'
//     . '<li>Vernehmlassung: ' . $record['vernehmlassung']
    . '<tr><td>Parlamentarier</td><td>' . l($record['parlamentarier_name'], 'parlamentarier/' . $record['parlamentarier_id']) . '</td></tr>'
    .  '<tr><td>Funktion:</td><td>' . check_plain($record['funktion']) . '</td></tr>'
    .  '<tr><td>Beruf:</td><td>' . check_plain($record['beruf']) . '</td></tr>'
    .  '<tr><td>Partei:</td><td>' . l($record['partei'], 'partei/' . $record['partei_id']) . '</td></tr>'
    .  '<tr><td>Homepage:</td><td>' . l($record['homepage'], $record['homepage']) . '</td></tr>'
    . '</table>'
    . '<h3>Mandate</h3>'
    . '<ul>'
    .    $record['mandate']
    . '</ul>';

    $build = array();
    $build['terms'] = array(
      '#weight' => -5,
      '#prefix' => '<div class="lobbywatch">',
      '#markup' => $markup,
      '#suffix' => '</div>',
      );

      return $build;
  } else {
    drupal_goto('zutrittsberechtigter');
  }

}
